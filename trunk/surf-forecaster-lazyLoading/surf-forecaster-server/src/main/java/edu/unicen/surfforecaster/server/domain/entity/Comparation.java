/**
 * 
 */
package edu.unicen.surfforecaster.server.domain.entity;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;

import org.apache.commons.lang.Validate;

/**
 * Class used to represent a comparation between several spots.
 * 
 * @author esteban
 * 
 */
@Entity
public class Comparation {
	/**
	 * Entity autogenerated id.
	 */
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	private Integer id;
	/**
	 * the spots to be compared.
	 */
	@ManyToMany(cascade = CascadeType.ALL, fetch = FetchType.EAGER)
	List<Spot> spots = new ArrayList<Spot>();

	@ManyToOne(cascade = CascadeType.ALL, fetch = FetchType.EAGER)
	User user;

	/**
	 * 
	 */
	public Comparation() {
	}

	/**
	 * Add spot to the comparation list.
	 * 
	 * @param spot
	 */
	public void addSpot(final Spot spot) {
		Validate.notNull(spot);
		spots.add(spot);
	}

	/**
	 * Remove spot from the comparation list.
	 * 
	 * @param spot
	 */
	public void removeSpot(final Spot spot) {
		Validate.notNull(spot);
		spots.remove(spot);
	}

	/**
	 * @return the spots to be compared.
	 */
	public List<Spot> getSpots() {
		return Collections.unmodifiableList(spots);
	}

	/**
	 * @return the id
	 */
	public Integer getId() {
		return id;
	}

	/**
	 * @param id
	 *            the id to set
	 */
	public void setId(final Integer id) {
		this.id = id;
	}
}
